结合自己的体会，谈谈从程序设计者的角度看，单进程编程和多进程编程最大的区别是什么？
单进程编程各进程顺序执行，数据同步。复杂度低，用途单一。多进程编程各进程同时执行，数据异步。复杂度高，用途广泛。
在设计多进程编程时，要考虑资源的分配，时间片的分配等达到系统调度平衡。要综合考虑所有进程的情况以达到最优的并行执行效果。
你是如何修改时间片的？仅针对样本程序建立的进程，在修改时间片前后，log文件的统计结果（不包括Graphic）都是什么样？结合你的修改分析一下为什么会这样变化，或者为什么没变化？
include/sched.h宏INIT_TASK中定义的：  
     #define INIT_TASK \  
     { 0,15,15, //分别对应state;counter和priority;  
     将priority值修改，即可实现对时间片大小的调整  
将时间片大小由15改为20后：
通过对PID为0、1、2、3、4和5的进程统计，可看出这些进程的等待时间、周转时间和运行时间不变或变大了；平均等待时间，平均完成时间增大，吞吐量减小
原因是修改时间片大小导致调度算法的最优性减弱，时间片增大后，可能原来需要占用两个小的时间片的进程现在需要占用两个大的时间片，有一部分时间的浪费。
比如某个任务需要时间为30。原来时间片为15，进程占用两个时间片即可完成，需要的时间为30；而现在时间片为20，同样需要占用两个时间片，需要的时间为40
